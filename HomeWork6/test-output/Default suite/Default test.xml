<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="UX330UAK" ignored="0" tests="45" failures="0" timestamp="19 Oct 2019 19:35:30 GMT" time="0.232" errors="0">
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;listType&amp;apos; is required by BeforeMethod on method initialize but has not been marked @Optional or defined
in C:\Users\Robbie\AppData\Local\Temp\testng-eclipse--1861592219\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'listType' is required by BeforeMethod on method initialize but has not been marked @Optional or defined
in C:\Users\Robbie\AppData\Local\Temp\testng-eclipse--1861592219\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="testAdd" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase name="testAddAfter_invalidElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase name="testAddAfter_validElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase name="testAddAfter_validElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase name="testAddToFront" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase name="testAddToRear" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase name="testAdd_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase name="testAdd_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase name="testAdd_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase name="testAdd_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase name="testAdd_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase name="testContains_invalidElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase name="testContains_validElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase name="testContains_validElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase name="testFirst" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase name="testGet_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase name="testGet_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase name="testGet_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase name="testGet_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase name="testIndexOf_invalidElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase name="testIndexOf_validElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase name="testIndexOf_validElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase name="testIsEmpty" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase name="testIterator" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase name="testLast" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase name="testListIterator" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase name="testListIterator_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase name="testListIterator_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase name="testListIterator_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase name="testListIterator_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase name="testListIterator_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase name="testRemoveFirst" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase name="testRemoveLast" time="0.016" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase name="testRemove_invalidElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase name="testRemove_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase name="testRemove_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase name="testRemove_validElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase name="testRemove_validElement" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase name="testRemove_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase name="testRemove_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase name="testSet_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase name="testSet_invalidIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase name="testSet_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase name="testSet_validIndex" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase name="testSize" time="0.0" classname="Test_8_A_addAfterBA_AB">
    <skipped/>
  </testcase> <!-- testSize -->
</testsuite>
