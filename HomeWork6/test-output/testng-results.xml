<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="438" passed="438">
  <reporter-output>
  </reporter-output>
  <suite name="List Testing 2" duration-ms="1191" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:28Z">
    <groups>
    </groups>
    <test name="Good List" duration-ms="1191" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:28Z">
      <class name="Test_6_A_addToFrontB_BA">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAdd" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_6_A_addToFrontB_BA.testAddAfter_invalidElement(Test_6_A_addToFrontB_BA.java:251)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAddToRear" duration-ms="5" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAdd_invalidIndex" duration-ms="2" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_6_A_addToFrontB_BA.testAdd_invalidIndex(Test_6_A_addToFrontB_BA.java:271)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 3, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_6_A_addToFrontB_BA.testAdd_invalidIndex(Test_6_A_addToFrontB_BA.java:271)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testContains_validElement" duration-ms="1" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testContains_validElement" duration-ms="1" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testGet_invalidIndex" duration-ms="5" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_6_A_addToFrontB_BA.testGet_invalidIndex(Test_6_A_addToFrontB_BA.java:341)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_6_A_addToFrontB_BA.testGet_invalidIndex(Test_6_A_addToFrontB_BA.java:341)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testIndexOf_validElement" duration-ms="11" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testIndexOf_validElement" duration-ms="1" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testIterator" duration-ms="2" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testLast" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testListIterator" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_6_A_addToFrontB_BA.testListIterator(Test_6_A_addToFrontB_BA.java:191)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_6_A_addToFrontB_BA.testListIterator_invalidIndex(Test_6_A_addToFrontB_BA.java:201)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_6_A_addToFrontB_BA.testListIterator_invalidIndex(Test_6_A_addToFrontB_BA.java:201)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_6_A_addToFrontB_BA.testListIterator_validIndex(Test_6_A_addToFrontB_BA.java:211)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testListIterator_validIndex" duration-ms="2" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_6_A_addToFrontB_BA.testListIterator_validIndex(Test_6_A_addToFrontB_BA.java:211)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_6_A_addToFrontB_BA.testListIterator_validIndex(Test_6_A_addToFrontB_BA.java:211)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemoveFirst" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_6_A_addToFrontB_BA.testRemove_invalidElement(Test_6_A_addToFrontB_BA.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_6_A_addToFrontB_BA.testRemove_invalidIndex(Test_6_A_addToFrontB_BA.java:291)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemove_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_6_A_addToFrontB_BA.testRemove_invalidIndex(Test_6_A_addToFrontB_BA.java:291)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemove_validIndex" duration-ms="15" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_6_A_addToFrontB_BA.testSet_invalidIndex(Test_6_A_addToFrontB_BA.java:311)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_6_A_addToFrontB_BA.testSet_invalidIndex(Test_6_A_addToFrontB_BA.java:311)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_6_A_addToFrontB_BA@548a9f61]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
      </class> <!-- Test_6_A_addToFrontB_BA -->
      <class name="Test_7_A_addToRearB_AB">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAdd" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_7_A_addToRearB_AB.testAddAfter_invalidElement(Test_7_A_addToRearB_AB.java:251)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAddToFront" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAddToRear" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAdd_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_7_A_addToRearB_AB.testAdd_invalidIndex(Test_7_A_addToRearB_AB.java:271)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAdd_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 3, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_7_A_addToRearB_AB.testAdd_invalidIndex(Test_7_A_addToRearB_AB.java:271)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="3" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testContains_invalidElement" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testIndexOf_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testIndexOf_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_7_A_addToRearB_AB.testGet_invalidIndex(Test_7_A_addToRearB_AB.java:341)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_7_A_addToRearB_AB.testGet_invalidIndex(Test_7_A_addToRearB_AB.java:341)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testIsEmpty" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_7_A_addToRearB_AB.testListIterator_validIndex(Test_7_A_addToRearB_AB.java:211)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testListIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_7_A_addToRearB_AB.testListIterator(Test_7_A_addToRearB_AB.java:191)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_7_A_addToRearB_AB.testListIterator_invalidIndex(Test_7_A_addToRearB_AB.java:201)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemoveFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_7_A_addToRearB_AB.testListIterator_invalidIndex(Test_7_A_addToRearB_AB.java:201)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_7_A_addToRearB_AB.testListIterator_validIndex(Test_7_A_addToRearB_AB.java:211)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_7_A_addToRearB_AB.testListIterator_validIndex(Test_7_A_addToRearB_AB.java:211)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_7_A_addToRearB_AB.testRemove_invalidElement(Test_7_A_addToRearB_AB.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_7_A_addToRearB_AB.testRemove_invalidIndex(Test_7_A_addToRearB_AB.java:291)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemove_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_7_A_addToRearB_AB.testRemove_invalidIndex(Test_7_A_addToRearB_AB.java:291)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemove_validElement" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_7_A_addToRearB_AB.testSet_invalidIndex(Test_7_A_addToRearB_AB.java:311)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_7_A_addToRearB_AB@68be2bc2]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_7_A_addToRearB_AB.testSet_invalidIndex(Test_7_A_addToRearB_AB.java:311)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
      </class> <!-- Test_7_A_addToRearB_AB -->
      <class name="Test_2_addToFrontA_A">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAdd" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_2_addToFrontA_A.testAddAfter_invalidElement(Test_2_addToFrontA_A.java:252)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAddToRear" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testContains_validElement" duration-ms="17" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_2_addToFrontA_A.testAdd_invalidIndex(Test_2_addToFrontA_A.java:272)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_2_addToFrontA_A.testAdd_invalidIndex(Test_2_addToFrontA_A.java:272)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_2_addToFrontA_A.testGet_invalidIndex(Test_2_addToFrontA_A.java:342)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_2_addToFrontA_A.testGet_invalidIndex(Test_2_addToFrontA_A.java:342)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="12" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf(int, java.lang.Character)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testLast" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testListIterator" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_2_addToFrontA_A.testListIterator(Test_2_addToFrontA_A.java:192)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_2_addToFrontA_A.testListIterator_validIndex(Test_2_addToFrontA_A.java:212)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testRemoveFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_2_addToFrontA_A.testListIterator_validIndex(Test_2_addToFrontA_A.java:212)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_2_addToFrontA_A.testListIterator_invalidIndex(Test_2_addToFrontA_A.java:202)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_2_addToFrontA_A.testListIterator_invalidIndex(Test_2_addToFrontA_A.java:202)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testRemove_invalidElement" duration-ms="4" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_2_addToFrontA_A.testRemove_invalidElement(Test_2_addToFrontA_A.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_2_addToFrontA_A.testRemove_invalidIndex(Test_2_addToFrontA_A.java:292)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_2_addToFrontA_A.testSet_invalidIndex(Test_2_addToFrontA_A.java:312)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testSet_invalidIndex" duration-ms="16" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_2_addToFrontA_A.testSet_invalidIndex(Test_2_addToFrontA_A.java:312)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_2_addToFrontA_A.testRemove_invalidIndex(Test_2_addToFrontA_A.java:292)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2_addToFrontA_A@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_2_addToFrontA_A -->
      <class name="Test_3_addToRearA_A">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="16" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAdd" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_3_addToRearA_A.testAddAfter_invalidElement(Test_3_addToRearA_A.java:249)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAddToRear" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_3_addToRearA_A.testAdd_invalidIndex(Test_3_addToRearA_A.java:269)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_3_addToRearA_A.testAdd_invalidIndex(Test_3_addToRearA_A.java:269)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAdd_validIndex" duration-ms="16" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_3_addToRearA_A.testGet_invalidIndex(Test_3_addToRearA_A.java:339)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_3_addToRearA_A.testGet_invalidIndex(Test_3_addToRearA_A.java:339)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testIndexOf()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf(int, java.lang.Character)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testListIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_3_addToRearA_A.testListIterator(Test_3_addToRearA_A.java:189)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_3_addToRearA_A.testListIterator_validIndex(Test_3_addToRearA_A.java:209)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_3_addToRearA_A.testListIterator_validIndex(Test_3_addToRearA_A.java:209)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_3_addToRearA_A.testListIterator_invalidIndex(Test_3_addToRearA_A.java:199)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_3_addToRearA_A.testListIterator_invalidIndex(Test_3_addToRearA_A.java:199)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_3_addToRearA_A.testRemove_invalidElement(Test_3_addToRearA_A.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testRemoveFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_3_addToRearA_A.testRemove_invalidIndex(Test_3_addToRearA_A.java:289)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testRemove_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_3_addToRearA_A.testRemove_invalidIndex(Test_3_addToRearA_A.java:289)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testRemove_validIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_3_addToRearA_A.testSet_invalidIndex(Test_3_addToRearA_A.java:309)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_3_addToRearA_A.testSet_invalidIndex(Test_3_addToRearA_A.java:309)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3_addToRearA_A@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_3_addToRearA_A -->
      <class name="Test_4_addA_A">
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAddAfter_invalidElement" duration-ms="5" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_4_addA_A.testAddAfter_invalidElement(Test_4_addA_A.java:229)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAdd" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAddToRear" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_4_addA_A.testAdd_invalidIndex(Test_4_addA_A.java:247)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_4_addA_A.testGet_invalidIndex(Test_4_addA_A.java:310)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_4_addA_A.testGet_invalidIndex(Test_4_addA_A.java:310)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_4_addA_A.testAdd_invalidIndex(Test_4_addA_A.java:247)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf(int, java.lang.Character)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testListIterator_invalidIndex" duration-ms="16" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_4_addA_A.testListIterator_invalidIndex(Test_4_addA_A.java:184)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testListIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_4_addA_A.testListIterator(Test_4_addA_A.java:175)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testRemove_validElement" duration-ms="16" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_4_addA_A.testRemove_invalidIndex(Test_4_addA_A.java:265)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_4_addA_A.testListIterator_invalidIndex(Test_4_addA_A.java:184)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_4_addA_A.testListIterator_validIndex(Test_4_addA_A.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testRemoveFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_4_addA_A.testRemove_invalidElement(Test_4_addA_A.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_4_addA_A.testListIterator_validIndex(Test_4_addA_A.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_4_addA_A.testRemove_invalidIndex(Test_4_addA_A.java:265)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_4_addA_A.testSet_invalidIndex(Test_4_addA_A.java:283)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_4_addA_A.testSet_invalidIndex(Test_4_addA_A.java:283)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4_addA_A@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_4_addA_A -->
      <class name="Test_9_A_addB_AB">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAdd" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_9_A_addB_AB.testAddAfter_invalidElement(Test_9_A_addB_AB.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAddToRear" duration-ms="2" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAdd_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_9_A_addB_AB.testAdd_invalidIndex(Test_9_A_addB_AB.java:273)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAdd_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 3, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_9_A_addB_AB.testAdd_invalidIndex(Test_9_A_addB_AB.java:273)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testContains_validElement" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testContains_validElement" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_9_A_addB_AB.testGet_invalidIndex(Test_9_A_addB_AB.java:343)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_9_A_addB_AB.testGet_invalidIndex(Test_9_A_addB_AB.java:343)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testIndexOf_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testLast" duration-ms="11" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testIndexOf_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testListIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_9_A_addB_AB.testListIterator(Test_9_A_addB_AB.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testListIterator_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_9_A_addB_AB.testListIterator_invalidIndex(Test_9_A_addB_AB.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_9_A_addB_AB.testListIterator_invalidIndex(Test_9_A_addB_AB.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_9_A_addB_AB.testListIterator_validIndex(Test_9_A_addB_AB.java:213)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_9_A_addB_AB.testListIterator_validIndex(Test_9_A_addB_AB.java:213)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testListIterator_validIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_9_A_addB_AB.testListIterator_validIndex(Test_9_A_addB_AB.java:213)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemoveFirst" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemoveLast" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_9_A_addB_AB.testRemove_invalidElement(Test_9_A_addB_AB.java:102)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_9_A_addB_AB.testRemove_invalidIndex(Test_9_A_addB_AB.java:293)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemove_invalidIndex" duration-ms="3" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_9_A_addB_AB.testRemove_invalidIndex(Test_9_A_addB_AB.java:293)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testRemove_validIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testSet_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_9_A_addB_AB.testSet_invalidIndex(Test_9_A_addB_AB.java:313)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_9_A_addB_AB.testSet_invalidIndex(Test_9_A_addB_AB.java:313)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testSet_validIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_9_A_addB_AB@675d3402]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_9_A_addB_AB -->
      <class name="Test_8_A_addAfterBA_AB">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAdd" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 3, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_8_A_addAfterBA_AB.testAdd_invalidIndex(Test_8_A_addAfterBA_AB.java:272)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAddToRear" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_8_A_addAfterBA_AB.testAddAfter_invalidElement(Test_8_A_addAfterBA_AB.java:252)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_8_A_addAfterBA_AB.testAdd_invalidIndex(Test_8_A_addAfterBA_AB.java:272)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testGet_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_8_A_addAfterBA_AB.testGet_invalidIndex(Test_8_A_addAfterBA_AB.java:342)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_8_A_addAfterBA_AB.testGet_invalidIndex(Test_8_A_addAfterBA_AB.java:342)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testGet_validIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testIndexOf_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_8_A_addAfterBA_AB.testListIterator_invalidIndex(Test_8_A_addAfterBA_AB.java:202)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testListIterator_validIndex" duration-ms="16" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_8_A_addAfterBA_AB.testListIterator_validIndex(Test_8_A_addAfterBA_AB.java:212)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testIndexOf_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_8_A_addAfterBA_AB.testListIterator_validIndex(Test_8_A_addAfterBA_AB.java:212)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testListIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_8_A_addAfterBA_AB.testListIterator(Test_8_A_addAfterBA_AB.java:192)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_8_A_addAfterBA_AB.testListIterator_invalidIndex(Test_8_A_addAfterBA_AB.java:202)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemove_invalidElement" duration-ms="6" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_8_A_addAfterBA_AB.testRemove_invalidElement(Test_8_A_addAfterBA_AB.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_8_A_addAfterBA_AB.testListIterator_validIndex(Test_8_A_addAfterBA_AB.java:212)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemoveFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemove_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_8_A_addAfterBA_AB.testRemove_invalidIndex(Test_8_A_addAfterBA_AB.java:292)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_8_A_addAfterBA_AB.testRemove_invalidIndex(Test_8_A_addAfterBA_AB.java:292)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testSet_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_8_A_addAfterBA_AB.testSet_invalidIndex(Test_8_A_addAfterBA_AB.java:312)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_8_A_addAfterBA_AB.testSet_invalidIndex(Test_8_A_addAfterBA_AB.java:312)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testSize" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_8_A_addAfterBA_AB@28feb3fa]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
      </class> <!-- Test_8_A_addAfterBA_AB -->
      <class name="Test_5_add0A_A">
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_5_add0A_A.testAddAfter_invalidElement(Test_5_add0A_A.java:227)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAdd" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_5_add0A_A.testAdd_invalidIndex(Test_5_add0A_A.java:245)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testGet_invalidIndex" duration-ms="16" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_5_add0A_A.testGet_invalidIndex(Test_5_add0A_A.java:308)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_5_add0A_A.testAdd_invalidIndex(Test_5_add0A_A.java:245)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAddToRear" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIndexOf(int, java.lang.Character)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testListIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_5_add0A_A.testListIterator(Test_5_add0A_A.java:173)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_5_add0A_A.testGet_invalidIndex(Test_5_add0A_A.java:308)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testListIterator_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_5_add0A_A.testListIterator_invalidIndex(Test_5_add0A_A.java:182)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_5_add0A_A.testListIterator_invalidIndex(Test_5_add0A_A.java:182)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testRemove_invalidIndex" duration-ms="16" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_5_add0A_A.testRemove_invalidIndex(Test_5_add0A_A.java:263)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_5_add0A_A.testListIterator_validIndex(Test_5_add0A_A.java:191)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_5_add0A_A.testRemove_invalidElement(Test_5_add0A_A.java:96)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testRemoveFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_5_add0A_A.testRemove_invalidIndex(Test_5_add0A_A.java:263)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_5_add0A_A.testListIterator_validIndex(Test_5_add0A_A.java:191)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_5_add0A_A.testSet_invalidIndex(Test_5_add0A_A.java:281)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_5_add0A_A.testSet_invalidIndex(Test_5_add0A_A.java:281)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5_add0A_A@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_5_add0A_A -->
      <class name="Test_11_A_add1B_AB">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAdd" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_11_A_add1B_AB.testAddAfter_invalidElement(Test_11_A_add1B_AB.java:255)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAddToRear" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAdd_invalidIndex" duration-ms="2" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_11_A_add1B_AB.testAdd_invalidIndex(Test_11_A_add1B_AB.java:275)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 3, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_11_A_add1B_AB.testAdd_invalidIndex(Test_11_A_add1B_AB.java:275)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAdd_validIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testContains_validElement" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_11_A_add1B_AB.testGet_invalidIndex(Test_11_A_add1B_AB.java:345)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_11_A_add1B_AB.testGet_invalidIndex(Test_11_A_add1B_AB.java:345)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testIndexOf_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testIndexOf_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="2" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testListIterator" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_11_A_add1B_AB.testListIterator(Test_11_A_add1B_AB.java:195)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_11_A_add1B_AB.testListIterator_invalidIndex(Test_11_A_add1B_AB.java:205)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testListIterator_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_11_A_add1B_AB.testListIterator_invalidIndex(Test_11_A_add1B_AB.java:205)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_11_A_add1B_AB.testListIterator_validIndex(Test_11_A_add1B_AB.java:215)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testListIterator_validIndex" duration-ms="1" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_11_A_add1B_AB.testListIterator_validIndex(Test_11_A_add1B_AB.java:215)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_11_A_add1B_AB.testListIterator_validIndex(Test_11_A_add1B_AB.java:215)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemoveFirst" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_11_A_add1B_AB.testRemove_invalidElement(Test_11_A_add1B_AB.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_11_A_add1B_AB.testRemove_invalidIndex(Test_11_A_add1B_AB.java:295)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemove_validElement" duration-ms="2" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_11_A_add1B_AB.testRemove_invalidIndex(Test_11_A_add1B_AB.java:295)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_11_A_add1B_AB.testSet_invalidIndex(Test_11_A_add1B_AB.java:315)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_11_A_add1B_AB.testSet_invalidIndex(Test_11_A_add1B_AB.java:315)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:28Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_11_A_add1B_AB@51565ec2]" name="testSize" duration-ms="1" started-at="2019-10-19T20:09:28Z" finished-at="2019-10-19T20:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_11_A_add1B_AB -->
      <class name="Test_1_emptyList">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testAdd" duration-ms="14" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testAddAfter_invalidElement" duration-ms="11" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_1_emptyList.testAddAfter_invalidElement(Test_1_emptyList.java:209)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="9" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testAddToFront" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testAddToRear" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testAdd_invalidIndex" duration-ms="6" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_1_emptyList.testAdd_invalidIndex(Test_1_emptyList.java:229)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_1_emptyList.testAdd_invalidIndex(Test_1_emptyList.java:229)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testContains_invalidElement" duration-ms="4" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at java.util.LinkedList.getFirst(Unknown Source)
at GoodList.first(GoodList.java:78)
at TestCase.first(TestCase.java:102)
at Test_1_emptyList.testFirst(Test_1_emptyList.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testGet" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_1_emptyList.testGet(Test_1_emptyList.java:271)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testIsEmpty" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="4" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testIterator" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testLast" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at java.util.LinkedList.getLast(Unknown Source)
at GoodList.last(GoodList.java:83)
at TestCase.last(TestCase.java:113)
at Test_1_emptyList.testLast(Test_1_emptyList.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testListIterator" duration-ms="3" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_1_emptyList.testListIterator(Test_1_emptyList.java:159)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="2" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testListIterator_invalidIndex" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_1_emptyList.testListIterator_invalidIndex(Test_1_emptyList.java:179)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="testListIterator_validIndex()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testListIterator_validIndex" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_1_emptyList.testListIterator_validIndex(Test_1_emptyList.java:169)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testRemoveFirst" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at java.util.LinkedList.removeFirst(Unknown Source)
at GoodList.removeFirst(GoodList.java:52)
at TestCase.removeFirst(TestCase.java:69)
at Test_1_emptyList.testRemoveFirst(Test_1_emptyList.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testRemoveLast" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at java.util.LinkedList.removeLast(Unknown Source)
at GoodList.removeLast(GoodList.java:57)
at TestCase.removeLast(TestCase.java:80)
at Test_1_emptyList.testRemoveLast(Test_1_emptyList.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_1_emptyList.testRemove_invalidIndex(Test_1_emptyList.java:239)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testSet" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_1_emptyList.testSet(Test_1_emptyList.java:250)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_1_emptyList.testRemove_invalidElement(Test_1_emptyList.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testToString()[pri:0, instance:Test_1_emptyList@4f933fd1]" name="testToString" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- Test_1_emptyList -->
      <class name="Test_39_ABC_remove1_AC">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAdd" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.addAfter(GoodList.java:34)
at TestCase.addAfter(TestCase.java:260)
at Test_39_ABC_remove1_AC.testAddAfter_invalidElement(Test_39_ABC_remove1_AC.java:254)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAddToFront" duration-ms="16" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAddAfter_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAddToRear" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 3, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_39_ABC_remove1_AC.testAdd_invalidIndex(Test_39_ABC_remove1_AC.java:274)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAdd_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkPositionIndex(Unknown Source)
at java.util.LinkedList.add(Unknown Source)
at GoodList.add(GoodList.java:42)
at TestCase.add(TestCase.java:171)
at Test_39_ABC_remove1_AC.testAdd_invalidIndex(Test_39_ABC_remove1_AC.java:274)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testAdd_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testGet_invalidIndex" duration-ms="15" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_39_ABC_remove1_AC.testGet_invalidIndex(Test_39_ABC_remove1_AC.java:344)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testFirst" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testContains_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testContains_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testGet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.get(Unknown Source)
at GoodList.get(GoodList.java:108)
at TestCase.get(TestCase.java:215)
at Test_39_ABC_remove1_AC.testGet_invalidIndex(Test_39_ABC_remove1_AC.java:344)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testIsEmpty" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf(int, java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testIterator" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIndexOf(int, java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testIndexOf" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testGet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="16" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testLast" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_39_ABC_remove1_AC.testListIterator_invalidIndex(Test_39_ABC_remove1_AC.java:204)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testListIterator_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_39_ABC_remove1_AC.testListIterator_invalidIndex(Test_39_ABC_remove1_AC.java:204)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testListIterator" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:123)
at TestCase.listIterator(TestCase.java:311)
at Test_39_ABC_remove1_AC.testListIterator(Test_39_ABC_remove1_AC.java:194)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testListIterator_validIndex" duration-ms="1" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_39_ABC_remove1_AC.testListIterator_validIndex(Test_39_ABC_remove1_AC.java:214)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testListIterator_validIndex" duration-ms="6" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_39_ABC_remove1_AC.testListIterator_validIndex(Test_39_ABC_remove1_AC.java:214)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testListIterator_validIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testListIterator_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validAddIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
at GoodList.listIterator(GoodList.java:128)
at TestCase.listIterator(TestCase.java:321)
at Test_39_ABC_remove1_AC.testListIterator_validIndex(Test_39_ABC_remove1_AC.java:214)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListIterator_validIndex -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemoveFirst" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemoveLast" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemove_invalidElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at GoodList.remove(GoodList.java:64)
at TestCase.remove(TestCase.java:91)
at Test_39_ABC_remove1_AC.testRemove_invalidElement(Test_39_ABC_remove1_AC.java:103)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_39_ABC_remove1_AC.testRemove_invalidIndex(Test_39_ABC_remove1_AC.java:294)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemove_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.remove(Unknown Source)
at GoodList.remove(GoodList.java:73)
at TestCase.remove(TestCase.java:182)
at Test_39_ABC_remove1_AC.testRemove_invalidIndex(Test_39_ABC_remove1_AC.java:294)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemove_validElement" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Character)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testRemove_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="indexedValidElements" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_39_ABC_remove1_AC.testSet_invalidIndex(Test_39_ABC_remove1_AC.java:314)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testSet_invalidIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="invalidIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
at java.util.LinkedList.checkElementIndex(Unknown Source)
at java.util.LinkedList.set(Unknown Source)
at GoodList.set(GoodList.java:103)
at TestCase.set(TestCase.java:194)
at Test_39_ABC_remove1_AC.testSet_invalidIndex(Test_39_ABC_remove1_AC.java:314)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="1" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testSize" duration-ms="0" started-at="2019-10-19T20:09:27Z" finished-at="2019-10-19T20:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_39_ABC_remove1_AC@1753acfe]" name="testSet_validIndex" duration-ms="0" started-at="2019-10-19T20:09:27Z" data-provider="validIndexes" finished-at="2019-10-19T20:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
      </class> <!-- Test_39_ABC_remove1_AC -->
    </test> <!-- Good List -->
  </suite> <!-- List Testing 2 -->
</testng-results>
